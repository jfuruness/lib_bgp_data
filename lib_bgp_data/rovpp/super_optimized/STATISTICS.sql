CREATE UNLOGGED TABLE IF NOT EXISTS statistics AS (

SELECT
    a.percent_iter,
    a.attack_type,
    a.table_name,
    a.adopting_or_not,
    a.adopted_policy,
    AVG(percent_start_bhole_end_bhole) AS avg_percent_start_bhole_end_bhole,
    AVG(percent_start_bhole_end_hijacked) AS avg_percent_start_bhole_end_hijacked,
    AVG(percent_start_bhole_end_victim) AS avg_percent_start_bhole_end_victim,
    AVG(percent_start_preventive_end_bhole) AS avg_percent_start_preventive_end_bhole,
    AVG(percent_start_preventive_end_hijacked) AS avg_percent_start_preventive_end_hijacked,
    AVG(percent_start_preventive_end_victim) AS avg_percent_start_preventive_end_victim,
    AVG(percent_start_hijacked_end_bhole) AS avg_percent_start_hijacked_end_bhole,
    AVG(percent_start_hijacked_end_hijacked) AS avg_percent_start_hijacked_end_hijacked,
    AVG(percent_start_hijacked_end_victim) AS avg_percent_start_hijacked_end_victim,
    AVG(percent_start_success_end_bhole) AS avg_percent_start_success_end_bhole,
    AVG(percent_start_success_end_hijacked) AS avg_percent_start_success_hijacked,
    AVG(percent_start_success_end_victim) AS avg_percent_start_success_end_victim,
    AVG(percent_start_bhole) AS avg_percent_start_bhole,
    AVG(percent_start_preventive) AS avg_percent_start_preventive,
    AVG(percent_start_hijacked) AS avg_percent_start_hijacked,
    AVG(percent_start_success) AS avg_percent_start_success,
    AVG(percent_end_bhole) AS avg_percent_end_bhole,
    AVG(percent_end_hijacked) AS avg_percent_end_hijacked,
    AVG(percent_end_victim) AS avg_percent_end_victim,
    AVG(percent_no_rib) AS avg_percent_no_rib,
    AVG(percent_disconnected) AS avg_percent_disconnected,

    (1.645 * 2.0 * STDDEV(percent_start_bhole_end_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_bhole_end_bhole,
    (1.645 * 2.0 * STDDEV(percent_start_bhole_end_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_bhole_end_hijacked,
    (1.645 * 2.0 * STDDEV(percent_start_bhole_end_victim))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_bhole_end_victim,
    (1.645 * 2.0 * STDDEV(percent_start_preventive_end_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_preventive_end_bhole,
    (1.645 * 2.0 * STDDEV(percent_start_preventive_end_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_preventive_end_hijacked,
    (1.645 * 2.0 * STDDEV(percent_start_preventive_end_victim))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_preventive_end_victim,
    (1.645 * 2.0 * STDDEV(percent_start_hijacked_end_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_hijacked_end_bhole,
    (1.645 * 2.0 * STDDEV(percent_start_hijacked_end_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_hijacked_end_hijacked,
    (1.645 * 2.0 * STDDEV(percent_start_hijacked_end_victim))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_hijacked_end_victim,
    (1.645 * 2.0 * STDDEV(percent_start_success_end_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_success_end_bhole,
    (1.645 * 2.0 * STDDEV(percent_start_success_end_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_success_hijacked,
    (1.645 * 2.0 * STDDEV(percent_start_success_end_victim))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_success_end_victim,
    (1.645 * 2.0 * STDDEV(percent_start_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_bhole,
    (1.645 * 2.0 * STDDEV(percent_start_preventive))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_preventive,
    (1.645 * 2.0 * STDDEV(percent_start_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_hijacked,
    (1.645 * 2.0 * STDDEV(percent_start_success))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_start_success,
    (1.645 * 2.0 * STDDEV(percent_end_bhole))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_end_bhole,
    (1.645 * 2.0 * STDDEV(percent_end_hijacked))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_end_hijacked,
    (1.645 * 2.0 * STDDEV(percent_end_victim))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_end_victim,
    (1.645 * 2.0 * STDDEV(percent_no_rib))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_no_rib,
    (1.645 * 2.0 * STDDEV(percent_disconnected))::decimal / SQRT(COUNT(*))::decimal AS conf_bar_percent_disconnected
FROM
    aggregated_trials_avg a
GROUP BY
    a.percent_iter,
    a.attack_type,
    a.table_name,
    a.adopting_or_not,
    a.adopted_policy
);
